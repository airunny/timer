syntax = "proto3";

package api.timer.v1;

import "google/api/annotations.proto";
import "common/common.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "timer/v1/application.proto";
import "timer/v1/timer.proto";
import "timer/v1/user.proto";

option go_package = "api/timer/v1;v1";

service Service {
  rpc Healthy(common.EmptyRequest) returns (common.HealthyReply) {
    option (google.api.http) = {get: "/healthz"};
  }

  // 用户[登录]
  rpc Login(LoginRequest) returns (LoginReply) {
    option (google.api.http) = {post: "/v1/user/login" body:"*"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "用户登录",tags:["登录"]};
  }
  // 用户[刷新登录token]
  rpc RefreshToken(RefreshTokenRequest) returns (LoginReply) {
    option (google.api.http) = {get: "/v1/user/refresh"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "刷新token",tags:["登录"],parameters:{headers:[{name:"Authorization",type:STRING,required:true}]}};
  }

  // 应用[添加]
  rpc AddApplication(AddApplicationRequest) returns (Application) {
    option (google.api.http) = {post: "/v1/app" body:"*"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "添加应用",tags:["应用"],parameters:{headers:[{name:"Authorization",type:STRING,required:true}]}};
  }
  // 应用[删除]
  rpc DeleteApplication(DeleteApplicationRequest) returns (DeleteApplicationReply) {
    option (google.api.http) = {delete: "/v1/app/{id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "删除应用",tags:["应用"],parameters:{headers:[{name:"Authorization",type:STRING,required:true}]}};
  }
  // 应用[更新]
  rpc UpdateApplication(UpdateApplicationRequest) returns (UpdateApplicationReply) {
    option (google.api.http) = {put: "/v1/app/{id}" body:"*"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "更新应用",tags:["应用"],parameters:{headers:[{name:"Authorization",type:STRING,required:true}]}};
  }
  // 应用[更新状态]
  rpc UpdateApplicationStatus(UpdateApplicationStatusRequest) returns (UpdateApplicationStatusReply) {
    option (google.api.http) = {put: "/v1/app/{id}/status" body:"*"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "更新应用状态",tags:["应用"],parameters:{headers:[{name:"Authorization",type:STRING,required:true}]}};
  }
  // 应用[详情]
  rpc GetApplication(GetApplicationRequest) returns (Application) {
    option (google.api.http) = {get: "/v1/app/{id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "获取应用详情",tags:["应用"],parameters:{headers:[{name:"Authorization",type:STRING,required:true}]}};
  }
  // 应用[重新生成秘钥]
  rpc GenApplicationSecret(GenApplicationSecretRequest) returns (GenApplicationSecretReply) {
    option (google.api.http) = {put: "/v1/app/{id}/secret" body:"*"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "重新生成application秘钥",tags:["应用"],parameters:{headers:[{name:"Authorization",type:STRING,required:true}]}};
  }
  // 应用[列表]
  rpc ListApplication(ListApplicationRequest) returns (ListApplicationReply) {
    option (google.api.http) = {get: "/v1/app"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "获取应用列表",tags:["应用"],parameters:{headers:[{name:"Authorization",type:STRING,required:true}]}};
  }

  // 定时器[添加]
  rpc AddTimer(AddTimerRequest) returns (AddTimerReply){
    option (google.api.http) = {post: "/v1/timer" body:"*"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "添加定时器",tags:["定时器"],parameters:{headers:[{name:"Authorization",type:STRING,required:true}]}};
  }
  // 定时器[详情]
  rpc GetTimer(GetTimerRequest) returns (Timer) {
    option (google.api.http) = {get: "/v1/timer/{id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "查看定时器详情",tags:["定时器"],parameters:{headers:[{name:"Authorization",type:STRING,required:true}]}};
  }
  // 定时器[移除]
  rpc RevokeTimer(RevokeTimerRequest) returns (RevokeTimerReply) {
    option (google.api.http) = {get: "/v1/timer/{id}/invoke"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "撤销定时器",tags:["定时器"],parameters:{headers:[{name:"Authorization",type:STRING,required:true}]}};
  }
  // 定时器[重放]
  rpc ReplayTimer(ReplayTimerRequest) returns (ReplayTimerReply) {
    option (google.api.http) = {get: "/v1/timer/{id}/replay"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "定时器回放；调用该接口回立刻回调",tags:["定时器"],parameters:{headers:[{name:"Authorization",type:STRING,required:true}]}};
  }
  // 定时器[列表]
  rpc ListTimer(ListTimerRequest) returns (ListTimerReply) {
    option (google.api.http) = {get: "/v1/timer"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "定时器列表",tags:["定时器"],parameters:{headers:[{name:"Authorization",type:STRING,required:true}]}};
  }
  // 定时器[回调列表]
  rpc ListTimerCallback(ListTimerCallbackRequest) returns (ListTimerCallbackReply) {
    option (google.api.http) = {get: "/v1/timer/{id}/callback"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "定时器列表回调记录",tags:["定时器"],parameters:{headers:[{name:"Authorization",type:STRING,required:true}]}};
  }

  // 用户[添加]
  rpc AddUser(AddUserRequest) returns (AddUserReply) {
    option (google.api.http) = {post: "/v1/user" body:"*"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "添加用户",tags:["用户"],parameters:{headers:[{name:"Authorization",type:STRING,required:true}]}};
  }
  // 用户[详情]
  rpc GetUser(GetUserRequest) returns (User) {
    option (google.api.http) = {get: "/v1/user/{id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "获取用户详情",tags:["用户"],parameters:{headers:[{name:"Authorization",type:STRING,required:true}]}};
  }
  // 用户[更新状态]
  rpc UpdateUserStatus(UpdateUserStatusRequest) returns (UpdateUserStatusReply) {
    option (google.api.http) = {put: "/v1/user/{id}/status" body:"*"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "更新用户状态",tags:["用户"],parameters:{headers:[{name:"Authorization",type:STRING,required:true}]}};
  }
  // 用户[更新密码]
  rpc UpdateUserPassword(UpdateUserPasswordRequest) returns (UpdateUserPasswordReply) {
    option (google.api.http) = {put: "/v1/user/{id}/password" body:"*"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "更新用户密码",tags:["用户"],parameters:{headers:[{name:"Authorization",type:STRING,required:true}]}};
  }
  // 用户[列表]
  rpc ListUser(ListUserRequest) returns (ListUserReply) {
    option (google.api.http) = {get: "/v1/user"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "获取用户列表",tags:["用户"],parameters:{headers:[{name:"Authorization",type:STRING,required:true}]}};
  }
  // 用户[删除]
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserReply) {
    option (google.api.http) = {delete: "/v1/user/{id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {summary: "删除用户",tags:["用户"],parameters:{headers:[{name:"Authorization",type:STRING,required:true}]}};
  }
}