// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: timer/v1/task.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskStatus int32

const (
	TaskStatus_TaskStatusUnknown TaskStatus = 0
	TaskStatus_Success           TaskStatus = 1 // 成功
	TaskStatus_Failed            TaskStatus = 2 // 失败
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "TaskStatusUnknown",
		1: "Success",
		2: "Failed",
	}
	TaskStatus_value = map[string]int32{
		"TaskStatusUnknown": 0,
		"Success":           1,
		"Failed":            2,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_timer_v1_task_proto_enumTypes[0].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_timer_v1_task_proto_enumTypes[0]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_timer_v1_task_proto_rawDescGZIP(), []int{0}
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64      `protobuf:"varint,1,opt,name=id,json=id,proto3" json:"id"`
	TimerId      string     `protobuf:"bytes,2,opt,name=timer_id,json=timerId,proto3" json:"timer_id"`
	RunTime      int64      `protobuf:"varint,3,opt,name=run_time,json=runTime,proto3" json:"run_time"`
	Request      string     `protobuf:"bytes,4,opt,name=request,json=request,proto3" json:"request"`
	Response     string     `protobuf:"bytes,5,opt,name=response,json=response,proto3" json:"response"`
	Status       TaskStatus `protobuf:"varint,6,opt,name=status,json=status,proto3,enum=api.timer.v1.TaskStatus" json:"status"`
	Retry        int64      `protobuf:"varint,7,opt,name=retry,json=retry,proto3" json:"retry"`
	FailedReason string     `protobuf:"bytes,8,opt,name=failed_reason,json=failedReason,proto3" json:"failed_reason"`
	CreatedAt    int64      `protobuf:"varint,9,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt    int64      `protobuf:"varint,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timer_v1_task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_timer_v1_task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_timer_v1_task_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Task) GetTimerId() string {
	if x != nil {
		return x.TimerId
	}
	return ""
}

func (x *Task) GetRunTime() int64 {
	if x != nil {
		return x.RunTime
	}
	return 0
}

func (x *Task) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

func (x *Task) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *Task) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TaskStatusUnknown
}

func (x *Task) GetRetry() int64 {
	if x != nil {
		return x.Retry
	}
	return 0
}

func (x *Task) GetFailedReason() string {
	if x != nil {
		return x.FailedReason
	}
	return ""
}

func (x *Task) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Task) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type ListTimerTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string     `protobuf:"bytes,1,opt,name=id,json=id,proto3" json:"id"`
	Size   int64      `protobuf:"varint,2,opt,name=size,json=size,proto3" json:"size"`
	Offset string     `protobuf:"bytes,3,opt,name=offset,json=offset,proto3" json:"offset"`
	Status TaskStatus `protobuf:"varint,4,opt,name=status,json=status,proto3,enum=api.timer.v1.TaskStatus" json:"status"`
}

func (x *ListTimerTaskRequest) Reset() {
	*x = ListTimerTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timer_v1_task_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTimerTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTimerTaskRequest) ProtoMessage() {}

func (x *ListTimerTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timer_v1_task_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTimerTaskRequest.ProtoReflect.Descriptor instead.
func (*ListTimerTaskRequest) Descriptor() ([]byte, []int) {
	return file_timer_v1_task_proto_rawDescGZIP(), []int{1}
}

func (x *ListTimerTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListTimerTaskRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListTimerTaskRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *ListTimerTaskRequest) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TaskStatusUnknown
}

type ListTimerTaskReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items  []*Task `protobuf:"bytes,1,rep,name=items,json=items,proto3" json:"items"`
	Offset string  `protobuf:"bytes,2,opt,name=offset,json=offset,proto3" json:"offset"`
}

func (x *ListTimerTaskReply) Reset() {
	*x = ListTimerTaskReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timer_v1_task_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTimerTaskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTimerTaskReply) ProtoMessage() {}

func (x *ListTimerTaskReply) ProtoReflect() protoreflect.Message {
	mi := &file_timer_v1_task_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTimerTaskReply.ProtoReflect.Descriptor instead.
func (*ListTimerTaskReply) Descriptor() ([]byte, []int) {
	return file_timer_v1_task_proto_rawDescGZIP(), []int{2}
}

func (x *ListTimerTaskReply) GetItems() []*Task {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListTimerTaskReply) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

type ListTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start  int64      `protobuf:"varint,1,opt,name=start,json=start,proto3" json:"start"`
	End    int64      `protobuf:"varint,2,opt,name=end,json=end,proto3" json:"end"`
	Size   int64      `protobuf:"varint,3,opt,name=size,json=size,proto3" json:"size"`
	Offset string     `protobuf:"bytes,4,opt,name=offset,json=offset,proto3" json:"offset"`
	Status TaskStatus `protobuf:"varint,5,opt,name=status,json=status,proto3,enum=api.timer.v1.TaskStatus" json:"status"`
}

func (x *ListTaskRequest) Reset() {
	*x = ListTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timer_v1_task_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTaskRequest) ProtoMessage() {}

func (x *ListTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timer_v1_task_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTaskRequest.ProtoReflect.Descriptor instead.
func (*ListTaskRequest) Descriptor() ([]byte, []int) {
	return file_timer_v1_task_proto_rawDescGZIP(), []int{3}
}

func (x *ListTaskRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListTaskRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *ListTaskRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListTaskRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *ListTaskRequest) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TaskStatusUnknown
}

type ListTaskReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items  []*Task `protobuf:"bytes,1,rep,name=items,json=items,proto3" json:"items"`
	Offset string  `protobuf:"bytes,2,opt,name=offset,json=offset,proto3" json:"offset"`
}

func (x *ListTaskReply) Reset() {
	*x = ListTaskReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timer_v1_task_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTaskReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTaskReply) ProtoMessage() {}

func (x *ListTaskReply) ProtoReflect() protoreflect.Message {
	mi := &file_timer_v1_task_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTaskReply.ProtoReflect.Descriptor instead.
func (*ListTaskReply) Descriptor() ([]byte, []int) {
	return file_timer_v1_task_proto_rawDescGZIP(), []int{4}
}

func (x *ListTaskReply) GetItems() []*Task {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListTaskReply) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

var File_timer_v1_task_proto protoreflect.FileDescriptor

var file_timer_v1_task_proto_rawDesc = []byte{
	0x0a, 0x13, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xa4, 0x04, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x17, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0x92, 0x41, 0x04, 0x2a, 0x02, 0x69,
	0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x92, 0x41, 0x0d, 0x2a, 0x0b, 0xe5, 0xae,
	0x9a, 0xe6, 0x97, 0xb6, 0xe5, 0x99, 0xa8, 0x49, 0x44, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x75, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x2a, 0x0c, 0xe8, 0xbf, 0x90, 0xe8, 0xa1,
	0x8c, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x2b, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x2a, 0x0c, 0xe5, 0x9b, 0x9e, 0xe8, 0xb0, 0x83, 0xe5, 0x86,
	0x85, 0xe5, 0xae, 0xb9, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x11, 0x92, 0x41, 0x0e, 0x2a, 0x0c, 0xe5, 0x9b, 0x9e, 0xe5, 0xa4, 0x8d, 0xe5, 0x86, 0x85, 0xe5,
	0xae, 0xb9, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x2b, 0x92, 0x41, 0x28, 0x2a, 0x26, 0xe5, 0x9b, 0x9e,
	0xe8, 0xb0, 0x83, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0xef, 0xbc, 0x9a, 0x30, 0xef, 0xbc, 0x9a,
	0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0xef, 0xbc, 0x9b, 0x31, 0xef, 0xbc, 0x9a, 0xe5, 0xa4, 0xb1,
	0xe8, 0xb4, 0xa5, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x72,
	0x65, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x42, 0x17, 0x92, 0x41, 0x14, 0x2a,
	0x12, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0xe9, 0x87, 0x8d, 0xe8, 0xaf, 0x95, 0xe6, 0xac, 0xa1,
	0xe6, 0x95, 0xb0, 0x52, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x0d, 0x66, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x2a, 0x0c, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0xe5, 0x8e,
	0x9f, 0xe5, 0x9b, 0xa0, 0x52, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x42, 0x1d, 0x92, 0x41, 0x1a, 0x2a, 0x18, 0xe6, 0x8f, 0x92,
	0xe5, 0x85, 0xa5, 0xe4, 0xba, 0x8b, 0xe4, 0xbb, 0xb6, 0xef, 0xbc, 0x8c, 0xe5, 0x8d, 0x95, 0xe4,
	0xbd, 0x8d, 0xe7, 0xa7, 0x92, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x48, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x29, 0x92, 0x41, 0x26, 0x2a, 0x24, 0xe6, 0x9c, 0x80, 0xe5, 0x90,
	0x8e, 0xe4, 0xb8, 0x80, 0xe6, 0xac, 0xa1, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe6, 0x97, 0xb6,
	0xe9, 0x97, 0xb4, 0xef, 0xbc, 0x8c, 0xe5, 0x8d, 0x95, 0xe4, 0xbd, 0x8d, 0xe7, 0xa7, 0x92, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb7, 0x02, 0x0a, 0x14, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x10, 0x92, 0x41, 0x0d, 0x2a, 0x0b, 0xe5, 0xae, 0x9a, 0xe6, 0x97, 0xb6, 0xe5, 0x99, 0xa8, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x26, 0x92, 0x41, 0x23, 0x2a, 0x1d, 0xe6, 0xaf, 0x8f, 0xe9, 0xa1, 0xb5,
	0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe5, 0xa4, 0xa7, 0xe5, 0xb0, 0x8f, 0xef, 0xbc, 0x8c, 0xe9,
	0xbb, 0x98, 0xe8, 0xae, 0xa4, 0x31, 0x30, 0x3a, 0x02, 0x31, 0x30, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x44, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x2c, 0x92, 0x41, 0x29, 0x2a, 0x27, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe9, 0xa1,
	0xb5, 0xe5, 0x81, 0x8f, 0xe7, 0xa7, 0xbb, 0xef, 0xbc, 0x8c, 0xe9, 0xbb, 0x98, 0xe8, 0xae, 0xa4,
	0xe4, 0xbc, 0xa0, 0xe7, 0xa9, 0xba, 0xe5, 0xad, 0x97, 0xe7, 0xac, 0xa6, 0xe4, 0xb8, 0xb2, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x7b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x42, 0x49, 0x92, 0x41, 0x46, 0x2a, 0x40, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0xe8, 0xbf,
	0x87, 0xe6, 0xbb, 0xa4, 0xef, 0xbc, 0x9b, 0x2d, 0x31, 0xef, 0xbc, 0x9a, 0xe4, 0xb8, 0x8d, 0xe5,
	0x81, 0x9a, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0xe7, 0xad, 0x9b, 0xe9, 0x80, 0x89, 0xef, 0xbc,
	0x9b, 0x30, 0xef, 0xbc, 0x9a, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0xef, 0xbc, 0x9b, 0x31, 0xef,
	0xbc, 0x9a, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x11,
	0x92, 0x41, 0x0e, 0x2a, 0x0c, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe5, 0x88, 0x97, 0xe8, 0xa1,
	0xa8, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0x92, 0x41, 0x1a, 0x2a, 0x18, 0xe4,
	0xb8, 0x8b, 0xe4, 0xb8, 0x80, 0xe9, 0xa1, 0xb5, 0xe7, 0x9a, 0x84, 0xe6, 0x95, 0xb0, 0xe6, 0x8d,
	0xae, 0xe5, 0x81, 0x8f, 0xe7, 0xa7, 0xbb, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0xf6, 0x02, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x1d, 0x92, 0x41, 0x1a, 0x2a, 0x18, 0xe5, 0xbc, 0x80, 0xe5, 0xa7, 0x8b, 0xe6,
	0x97, 0xb6, 0xe9, 0x97, 0xb4, 0xef, 0xbc, 0x8c, 0xe5, 0x8d, 0x95, 0xe4, 0xbd, 0x8d, 0xe7, 0xa7,
	0x92, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2f, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x1d, 0x92, 0x41, 0x1a, 0x2a, 0x18, 0xe7, 0xbb, 0x93, 0xe6,
	0x9d, 0x9f, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0xef, 0xbc, 0x8c, 0xe5, 0x8d, 0x95, 0xe4, 0xbd,
	0x8d, 0xe7, 0xa7, 0x92, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x3a, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x26, 0x92, 0x41, 0x23, 0x2a, 0x1d, 0xe6, 0xaf,
	0x8f, 0xe9, 0xa1, 0xb5, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe5, 0xa4, 0xa7, 0xe5, 0xb0, 0x8f,
	0xef, 0xbc, 0x8c, 0xe9, 0xbb, 0x98, 0xe8, 0xae, 0xa4, 0x31, 0x30, 0x3a, 0x02, 0x31, 0x30, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x44, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2c, 0x92, 0x41, 0x29, 0x2a, 0x27, 0xe6, 0x95, 0xb0, 0xe6,
	0x8d, 0xae, 0xe9, 0xa1, 0xb5, 0xe5, 0x81, 0x8f, 0xe7, 0xa7, 0xbb, 0xef, 0xbc, 0x8c, 0xe9, 0xbb,
	0x98, 0xe8, 0xae, 0xa4, 0xe4, 0xbc, 0xa0, 0xe7, 0xa9, 0xba, 0xe5, 0xad, 0x97, 0xe7, 0xac, 0xa6,
	0xe4, 0xb8, 0xb2, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x7b, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x49, 0x92, 0x41, 0x46, 0x2a, 0x40, 0xe7, 0x8a, 0xb6, 0xe6,
	0x80, 0x81, 0xe8, 0xbf, 0x87, 0xe6, 0xbb, 0xa4, 0xef, 0xbc, 0x9b, 0x2d, 0x31, 0xef, 0xbc, 0x9a,
	0xe4, 0xb8, 0x8d, 0xe5, 0x81, 0x9a, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0xe7, 0xad, 0x9b, 0xe9,
	0x80, 0x89, 0xef, 0xbc, 0x9b, 0x30, 0xef, 0xbc, 0x9a, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0xef,
	0xbc, 0x9b, 0x31, 0xef, 0xbc, 0x9a, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0x3a, 0x02, 0x2d, 0x31,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x11, 0x92,
	0x41, 0x0e, 0x2a, 0x0c, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0x92, 0x41, 0x1a, 0x2a, 0x18, 0xe4, 0xb8,
	0x8b, 0xe4, 0xb8, 0x80, 0xe9, 0xa1, 0xb5, 0xe7, 0x9a, 0x84, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae,
	0xe5, 0x81, 0x8f, 0xe7, 0xa7, 0xbb, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x2a, 0x3c,
	0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x11,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x42, 0x11, 0x5a, 0x0f,
	0x61, 0x70, 0x69, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_timer_v1_task_proto_rawDescOnce sync.Once
	file_timer_v1_task_proto_rawDescData = file_timer_v1_task_proto_rawDesc
)

func file_timer_v1_task_proto_rawDescGZIP() []byte {
	file_timer_v1_task_proto_rawDescOnce.Do(func() {
		file_timer_v1_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_timer_v1_task_proto_rawDescData)
	})
	return file_timer_v1_task_proto_rawDescData
}

var file_timer_v1_task_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_timer_v1_task_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_timer_v1_task_proto_goTypes = []interface{}{
	(TaskStatus)(0),              // 0: api.timer.v1.TaskStatus
	(*Task)(nil),                 // 1: api.timer.v1.Task
	(*ListTimerTaskRequest)(nil), // 2: api.timer.v1.ListTimerTaskRequest
	(*ListTimerTaskReply)(nil),   // 3: api.timer.v1.ListTimerTaskReply
	(*ListTaskRequest)(nil),      // 4: api.timer.v1.ListTaskRequest
	(*ListTaskReply)(nil),        // 5: api.timer.v1.ListTaskReply
}
var file_timer_v1_task_proto_depIdxs = []int32{
	0, // 0: api.timer.v1.Task.status:type_name -> api.timer.v1.TaskStatus
	0, // 1: api.timer.v1.ListTimerTaskRequest.status:type_name -> api.timer.v1.TaskStatus
	1, // 2: api.timer.v1.ListTimerTaskReply.items:type_name -> api.timer.v1.Task
	0, // 3: api.timer.v1.ListTaskRequest.status:type_name -> api.timer.v1.TaskStatus
	1, // 4: api.timer.v1.ListTaskReply.items:type_name -> api.timer.v1.Task
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_timer_v1_task_proto_init() }
func file_timer_v1_task_proto_init() {
	if File_timer_v1_task_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_timer_v1_task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timer_v1_task_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTimerTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timer_v1_task_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTimerTaskReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timer_v1_task_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timer_v1_task_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTaskReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_timer_v1_task_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_timer_v1_task_proto_goTypes,
		DependencyIndexes: file_timer_v1_task_proto_depIdxs,
		EnumInfos:         file_timer_v1_task_proto_enumTypes,
		MessageInfos:      file_timer_v1_task_proto_msgTypes,
	}.Build()
	File_timer_v1_task_proto = out.File
	file_timer_v1_task_proto_rawDesc = nil
	file_timer_v1_task_proto_goTypes = nil
	file_timer_v1_task_proto_depIdxs = nil
}
