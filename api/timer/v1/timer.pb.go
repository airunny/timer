// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: timer/v1/timer.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CallbackType int32

const (
	CallbackType_HTTP  CallbackType = 0 // http
	CallbackType_KAFKA CallbackType = 1 // 消息队列
)

// Enum value maps for CallbackType.
var (
	CallbackType_name = map[int32]string{
		0: "HTTP",
		1: "KAFKA",
	}
	CallbackType_value = map[string]int32{
		"HTTP":  0,
		"KAFKA": 1,
	}
)

func (x CallbackType) Enum() *CallbackType {
	p := new(CallbackType)
	*p = x
	return p
}

func (x CallbackType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CallbackType) Descriptor() protoreflect.EnumDescriptor {
	return file_timer_v1_timer_proto_enumTypes[0].Descriptor()
}

func (CallbackType) Type() protoreflect.EnumType {
	return &file_timer_v1_timer_proto_enumTypes[0]
}

func (x CallbackType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CallbackType.Descriptor instead.
func (CallbackType) EnumDescriptor() ([]byte, []int) {
	return file_timer_v1_timer_proto_rawDescGZIP(), []int{0}
}

type TimerStatus int32

const (
	TimerStatus_DISABLE TimerStatus = 0 // 未激活
	TimerStatus_ENABLE  TimerStatus = 1 // 激活
)

// Enum value maps for TimerStatus.
var (
	TimerStatus_name = map[int32]string{
		0: "DISABLE",
		1: "ENABLE",
	}
	TimerStatus_value = map[string]int32{
		"DISABLE": 0,
		"ENABLE":  1,
	}
)

func (x TimerStatus) Enum() *TimerStatus {
	p := new(TimerStatus)
	*p = x
	return p
}

func (x TimerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_timer_v1_timer_proto_enumTypes[1].Descriptor()
}

func (TimerStatus) Type() protoreflect.EnumType {
	return &file_timer_v1_timer_proto_enumTypes[1]
}

func (x TimerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimerStatus.Descriptor instead.
func (TimerStatus) EnumDescriptor() ([]byte, []int) {
	return file_timer_v1_timer_proto_rawDescGZIP(), []int{1}
}

type ParamsIn int32

const (
	ParamsIn_HEADER ParamsIn = 0 // 请求头
	ParamsIn_QUERY  ParamsIn = 1 // query
)

// Enum value maps for ParamsIn.
var (
	ParamsIn_name = map[int32]string{
		0: "HEADER",
		1: "QUERY",
	}
	ParamsIn_value = map[string]int32{
		"HEADER": 0,
		"QUERY":  1,
	}
)

func (x ParamsIn) Enum() *ParamsIn {
	p := new(ParamsIn)
	*p = x
	return p
}

func (x ParamsIn) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParamsIn) Descriptor() protoreflect.EnumDescriptor {
	return file_timer_v1_timer_proto_enumTypes[2].Descriptor()
}

func (ParamsIn) Type() protoreflect.EnumType {
	return &file_timer_v1_timer_proto_enumTypes[2]
}

func (x ParamsIn) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ParamsIn.Descriptor instead.
func (ParamsIn) EnumDescriptor() ([]byte, []int) {
	return file_timer_v1_timer_proto_rawDescGZIP(), []int{2}
}

type TimerType int32

const (
	TimerType_ONCE    TimerType = 0 // 一次性定时器
	TimerType_CRONJOB TimerType = 1 // cronjob类型
)

// Enum value maps for TimerType.
var (
	TimerType_name = map[int32]string{
		0: "ONCE",
		1: "CRONJOB",
	}
	TimerType_value = map[string]int32{
		"ONCE":    0,
		"CRONJOB": 1,
	}
)

func (x TimerType) Enum() *TimerType {
	p := new(TimerType)
	*p = x
	return p
}

func (x TimerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimerType) Descriptor() protoreflect.EnumDescriptor {
	return file_timer_v1_timer_proto_enumTypes[3].Descriptor()
}

func (TimerType) Type() protoreflect.EnumType {
	return &file_timer_v1_timer_proto_enumTypes[3]
}

func (x TimerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimerType.Descriptor instead.
func (TimerType) EnumDescriptor() ([]byte, []int) {
	return file_timer_v1_timer_proto_rawDescGZIP(), []int{3}
}

type Params struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string   `protobuf:"bytes,1,opt,name=key,json=key,proto3" json:"key"`
	Value string   `protobuf:"bytes,2,opt,name=value,json=value,proto3" json:"value"`
	In    ParamsIn `protobuf:"varint,3,opt,name=in,json=in,proto3,enum=api.timer.v1.ParamsIn" json:"in"`
}

func (x *Params) Reset() {
	*x = Params{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timer_v1_timer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Params) ProtoMessage() {}

func (x *Params) ProtoReflect() protoreflect.Message {
	mi := &file_timer_v1_timer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Params.ProtoReflect.Descriptor instead.
func (*Params) Descriptor() ([]byte, []int) {
	return file_timer_v1_timer_proto_rawDescGZIP(), []int{0}
}

func (x *Params) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Params) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Params) GetIn() ParamsIn {
	if x != nil {
		return x.In
	}
	return ParamsIn_HEADER
}

type AddTimerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId           string       `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id"`
	Name            string       `protobuf:"bytes,2,opt,name=name,json=name,proto3" json:"name"`
	Type            TimerType    `protobuf:"varint,3,opt,name=type,json=type,proto3,enum=api.timer.v1.TimerType" json:"type"`
	CallbackType    CallbackType `protobuf:"varint,4,opt,name=callback_type,json=callbackType,proto3,enum=api.timer.v1.CallbackType" json:"callback_type"`
	CallbackAddress string       `protobuf:"bytes,5,opt,name=callback_address,json=callbackAddress,proto3" json:"callback_address"`
	CronExpr        string       `protobuf:"bytes,6,opt,name=cron_expr,json=cronExpr,proto3" json:"cron_expr"`
	ExpireAt        int64        `protobuf:"varint,7,opt,name=expire_at,json=expireAt,proto3" json:"expire_at"`
	Attach          string       `protobuf:"bytes,8,opt,name=attach,json=attach,proto3" json:"attach"`
	Params          []*Params    `protobuf:"bytes,9,rep,name=params,json=params,proto3" json:"params"`
	Status          TimerStatus  `protobuf:"varint,10,opt,name=status,json=status,proto3,enum=api.timer.v1.TimerStatus" json:"status"`
}

func (x *AddTimerRequest) Reset() {
	*x = AddTimerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timer_v1_timer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTimerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTimerRequest) ProtoMessage() {}

func (x *AddTimerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timer_v1_timer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTimerRequest.ProtoReflect.Descriptor instead.
func (*AddTimerRequest) Descriptor() ([]byte, []int) {
	return file_timer_v1_timer_proto_rawDescGZIP(), []int{1}
}

func (x *AddTimerRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AddTimerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddTimerRequest) GetType() TimerType {
	if x != nil {
		return x.Type
	}
	return TimerType_ONCE
}

func (x *AddTimerRequest) GetCallbackType() CallbackType {
	if x != nil {
		return x.CallbackType
	}
	return CallbackType_HTTP
}

func (x *AddTimerRequest) GetCallbackAddress() string {
	if x != nil {
		return x.CallbackAddress
	}
	return ""
}

func (x *AddTimerRequest) GetCronExpr() string {
	if x != nil {
		return x.CronExpr
	}
	return ""
}

func (x *AddTimerRequest) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *AddTimerRequest) GetAttach() string {
	if x != nil {
		return x.Attach
	}
	return ""
}

func (x *AddTimerRequest) GetParams() []*Params {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *AddTimerRequest) GetStatus() TimerStatus {
	if x != nil {
		return x.Status
	}
	return TimerStatus_DISABLE
}

type AddTimerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,json=id,proto3" json:"id"`
}

func (x *AddTimerReply) Reset() {
	*x = AddTimerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timer_v1_timer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTimerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTimerReply) ProtoMessage() {}

func (x *AddTimerReply) ProtoReflect() protoreflect.Message {
	mi := &file_timer_v1_timer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTimerReply.ProtoReflect.Descriptor instead.
func (*AddTimerReply) Descriptor() ([]byte, []int) {
	return file_timer_v1_timer_proto_rawDescGZIP(), []int{2}
}

func (x *AddTimerReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTimerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,json=id,proto3" json:"id"`
}

func (x *GetTimerRequest) Reset() {
	*x = GetTimerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timer_v1_timer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimerRequest) ProtoMessage() {}

func (x *GetTimerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timer_v1_timer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimerRequest.ProtoReflect.Descriptor instead.
func (*GetTimerRequest) Descriptor() ([]byte, []int) {
	return file_timer_v1_timer_proto_rawDescGZIP(), []int{3}
}

func (x *GetTimerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Timer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string       `protobuf:"bytes,1,opt,name=id,json=id,proto3" json:"id"`
	AppId                 string       `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id"`
	Name                  string       `protobuf:"bytes,3,opt,name=name,json=name,proto3" json:"name"`
	Type                  TimerType    `protobuf:"varint,4,opt,name=type,json=type,proto3,enum=api.timer.v1.TimerType" json:"type"`
	CallbackType          CallbackType `protobuf:"varint,5,opt,name=callback_type,json=callbackType,proto3,enum=api.timer.v1.CallbackType" json:"callback_type"`
	CallbackAddress       string       `protobuf:"bytes,6,opt,name=callback_address,json=callbackAddress,proto3" json:"callback_address"`
	CronExpr              string       `protobuf:"bytes,7,opt,name=cron_expr,json=cronExpr,proto3" json:"cron_expr"`
	ExpireAt              int64        `protobuf:"varint,8,opt,name=expire_at,json=expireAt,proto3" json:"expire_at"`
	Attach                string       `protobuf:"bytes,9,opt,name=attach,json=attach,proto3" json:"attach"`
	Ttl                   int64        `protobuf:"varint,10,opt,name=ttl,json=ttl,proto3" json:"ttl"`
	Fail                  int64        `protobuf:"varint,11,opt,name=fail,json=fail,proto3" json:"fail"`
	Success               int64        `protobuf:"varint,12,opt,name=success,json=success,proto3" json:"success"`
	CallbackFailedReasons []string     `protobuf:"bytes,13,rep,name=callback_failed_reasons,json=callbackFailedReasons,proto3" json:"callback_failed_reasons"`
	Params                []*Params    `protobuf:"bytes,14,rep,name=params,json=params,proto3" json:"params"`
	Status                TimerStatus  `protobuf:"varint,15,opt,name=status,json=status,proto3,enum=api.timer.v1.TimerStatus" json:"status"`
}

func (x *Timer) Reset() {
	*x = Timer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timer_v1_timer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timer) ProtoMessage() {}

func (x *Timer) ProtoReflect() protoreflect.Message {
	mi := &file_timer_v1_timer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timer.ProtoReflect.Descriptor instead.
func (*Timer) Descriptor() ([]byte, []int) {
	return file_timer_v1_timer_proto_rawDescGZIP(), []int{4}
}

func (x *Timer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Timer) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Timer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Timer) GetType() TimerType {
	if x != nil {
		return x.Type
	}
	return TimerType_ONCE
}

func (x *Timer) GetCallbackType() CallbackType {
	if x != nil {
		return x.CallbackType
	}
	return CallbackType_HTTP
}

func (x *Timer) GetCallbackAddress() string {
	if x != nil {
		return x.CallbackAddress
	}
	return ""
}

func (x *Timer) GetCronExpr() string {
	if x != nil {
		return x.CronExpr
	}
	return ""
}

func (x *Timer) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *Timer) GetAttach() string {
	if x != nil {
		return x.Attach
	}
	return ""
}

func (x *Timer) GetTtl() int64 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *Timer) GetFail() int64 {
	if x != nil {
		return x.Fail
	}
	return 0
}

func (x *Timer) GetSuccess() int64 {
	if x != nil {
		return x.Success
	}
	return 0
}

func (x *Timer) GetCallbackFailedReasons() []string {
	if x != nil {
		return x.CallbackFailedReasons
	}
	return nil
}

func (x *Timer) GetParams() []*Params {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Timer) GetStatus() TimerStatus {
	if x != nil {
		return x.Status
	}
	return TimerStatus_DISABLE
}

type UpdateTimerStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string      `protobuf:"bytes,1,opt,name=id,json=id,proto3" json:"id"`
	Status TimerStatus `protobuf:"varint,2,opt,name=status,json=status,proto3,enum=api.timer.v1.TimerStatus" json:"status"`
}

func (x *UpdateTimerStatusRequest) Reset() {
	*x = UpdateTimerStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timer_v1_timer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTimerStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTimerStatusRequest) ProtoMessage() {}

func (x *UpdateTimerStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timer_v1_timer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTimerStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateTimerStatusRequest) Descriptor() ([]byte, []int) {
	return file_timer_v1_timer_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateTimerStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTimerStatusRequest) GetStatus() TimerStatus {
	if x != nil {
		return x.Status
	}
	return TimerStatus_DISABLE
}

type UpdateTimerStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status TimerStatus `protobuf:"varint,1,opt,name=status,json=status,proto3,enum=api.timer.v1.TimerStatus" json:"status"`
}

func (x *UpdateTimerStatusReply) Reset() {
	*x = UpdateTimerStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timer_v1_timer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTimerStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTimerStatusReply) ProtoMessage() {}

func (x *UpdateTimerStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_timer_v1_timer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTimerStatusReply.ProtoReflect.Descriptor instead.
func (*UpdateTimerStatusReply) Descriptor() ([]byte, []int) {
	return file_timer_v1_timer_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateTimerStatusReply) GetStatus() TimerStatus {
	if x != nil {
		return x.Status
	}
	return TimerStatus_DISABLE
}

type DeleteTimerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,json=id,proto3" json:"id"`
}

func (x *DeleteTimerRequest) Reset() {
	*x = DeleteTimerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timer_v1_timer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTimerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTimerRequest) ProtoMessage() {}

func (x *DeleteTimerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timer_v1_timer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTimerRequest.ProtoReflect.Descriptor instead.
func (*DeleteTimerRequest) Descriptor() ([]byte, []int) {
	return file_timer_v1_timer_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteTimerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteTimerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTimerReply) Reset() {
	*x = DeleteTimerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timer_v1_timer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTimerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTimerReply) ProtoMessage() {}

func (x *DeleteTimerReply) ProtoReflect() protoreflect.Message {
	mi := &file_timer_v1_timer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTimerReply.ProtoReflect.Descriptor instead.
func (*DeleteTimerReply) Descriptor() ([]byte, []int) {
	return file_timer_v1_timer_proto_rawDescGZIP(), []int{8}
}

type ReplayTimerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,json=id,proto3" json:"id"`
}

func (x *ReplayTimerRequest) Reset() {
	*x = ReplayTimerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timer_v1_timer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplayTimerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayTimerRequest) ProtoMessage() {}

func (x *ReplayTimerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timer_v1_timer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayTimerRequest.ProtoReflect.Descriptor instead.
func (*ReplayTimerRequest) Descriptor() ([]byte, []int) {
	return file_timer_v1_timer_proto_rawDescGZIP(), []int{9}
}

func (x *ReplayTimerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ReplayTimerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReplayTimerReply) Reset() {
	*x = ReplayTimerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timer_v1_timer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplayTimerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayTimerReply) ProtoMessage() {}

func (x *ReplayTimerReply) ProtoReflect() protoreflect.Message {
	mi := &file_timer_v1_timer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayTimerReply.ProtoReflect.Descriptor instead.
func (*ReplayTimerReply) Descriptor() ([]byte, []int) {
	return file_timer_v1_timer_proto_rawDescGZIP(), []int{10}
}

type ListTimerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size   int64  `protobuf:"varint,1,opt,name=size,json=size,proto3" json:"size"`
	Offset string `protobuf:"bytes,2,opt,name=offset,json=offset,proto3" json:"offset"`
}

func (x *ListTimerRequest) Reset() {
	*x = ListTimerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timer_v1_timer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTimerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTimerRequest) ProtoMessage() {}

func (x *ListTimerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timer_v1_timer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTimerRequest.ProtoReflect.Descriptor instead.
func (*ListTimerRequest) Descriptor() ([]byte, []int) {
	return file_timer_v1_timer_proto_rawDescGZIP(), []int{11}
}

func (x *ListTimerRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListTimerRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

type ListTimerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items  []*Timer `protobuf:"bytes,1,rep,name=items,json=items,proto3" json:"items"`
	Offset string   `protobuf:"bytes,2,opt,name=offset,json=offset,proto3" json:"offset"`
}

func (x *ListTimerReply) Reset() {
	*x = ListTimerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timer_v1_timer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTimerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTimerReply) ProtoMessage() {}

func (x *ListTimerReply) ProtoReflect() protoreflect.Message {
	mi := &file_timer_v1_timer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTimerReply.ProtoReflect.Descriptor instead.
func (*ListTimerReply) Descriptor() ([]byte, []int) {
	return file_timer_v1_timer_proto_rawDescGZIP(), []int{12}
}

func (x *ListTimerReply) GetItems() []*Timer {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListTimerReply) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

var File_timer_v1_timer_proto protoreflect.FileDescriptor

var file_timer_v1_timer_proto_rawDesc = []byte{
	0x0a, 0x14, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x69, 0x6d, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x01, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x20, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41,
	0x0b, 0x2a, 0x09, 0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0xe5, 0x90, 0x8d, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0e, 0x92, 0x41, 0x0b, 0x2a, 0x09, 0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0xe5, 0x80, 0xbc,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x54, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x49, 0x6e, 0x42, 0x2c, 0x92, 0x41, 0x29,
	0x2a, 0x27, 0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0xe6, 0x89, 0x80, 0xe5, 0x9c, 0xa8, 0xe4, 0xbd,
	0x8d, 0xe7, 0xbd, 0xae, 0xef, 0xbc, 0x9a, 0x30, 0x3a, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0xef,
	0xbc, 0x9b, 0x31, 0x3a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x52, 0x02, 0x69, 0x6e, 0x22, 0xd3, 0x06,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x2a, 0x08, 0xe5, 0xba, 0x94, 0xe7, 0x94, 0xa8, 0x49, 0x44,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x11, 0x2a, 0x0f, 0xe5, 0xae, 0x9a, 0xe6,
	0x97, 0xb6, 0xe5, 0x99, 0xa8, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x41, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x14, 0x92, 0x41, 0x11, 0x2a, 0x0f, 0xe5,
	0xae, 0x9a, 0xe6, 0x97, 0xb6, 0xe5, 0x99, 0xa8, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x6e, 0x0a, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x42, 0x2d, 0x92, 0x41, 0x2a, 0x2a, 0x28, 0xe5, 0x9b,
	0x9e, 0xe8, 0xb0, 0x83, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0xef, 0xbc, 0x88, 0x6d, 0x71, 0xe7,
	0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0xe5, 0x8f, 0xaa, 0xe6, 0x94, 0xaf, 0xe6, 0x8c, 0x81, 0x6b, 0x61,
	0x66, 0x6b, 0x61, 0xef, 0xbc, 0x89, 0x52, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x12, 0xbe, 0x01, 0x0a, 0x10, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x92, 0x01, 0x92, 0x41, 0x8e, 0x01, 0x2a, 0x8b, 0x01, 0xe5, 0x9b, 0x9e, 0xe8, 0xb0, 0x83, 0xe5,
	0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0x3a, 0xe5, 0xa6, 0x82, 0xe6, 0x9e, 0x9c, 0xe6, 0x98, 0xaf, 0x68,
	0x74, 0x74, 0x70, 0xe7, 0x9a, 0x84, 0xe6, 0x96, 0xb9, 0xe5, 0xbc, 0x8f, 0xe8, 0xbf, 0x99, 0xe9,
	0x87, 0x8c, 0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99, 0x55, 0x52, 0x4c, 0xef, 0xbc, 0x8c, 0xe6, 0xb3,
	0xa8, 0xe6, 0x84, 0x8f, 0xe5, 0x9b, 0x9e, 0xe8, 0xb0, 0x83, 0xe6, 0x96, 0xb9, 0xe5, 0xbc, 0x8f,
	0xe4, 0xb8, 0xba, 0x20, 0x47, 0x45, 0x54, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x5f, 0x75, 0x72, 0x6c, 0x3f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x3d, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0xef, 0xbc, 0x9b, 0xe5, 0xa6, 0x82, 0xe6, 0x9e, 0x9c, 0xe6, 0x98, 0xaf, 0x6b, 0x61,
	0x66, 0x6b, 0x61, 0xe5, 0xa1, 0xab, 0xe5, 0x86, 0x99, 0x74, 0x6f, 0x70, 0x69, 0x63, 0xe5, 0x90,
	0x8d, 0xe7, 0xa7, 0xb0, 0x52, 0x0f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x65, 0x78,
	0x70, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0x92, 0x41, 0x15, 0x2a, 0x13, 0x63,
	0x72, 0x6f, 0x6e, 0x6a, 0x6f, 0x62, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0xe5, 0xbf, 0x85, 0xe5,
	0xa1, 0xab, 0x52, 0x08, 0x63, 0x72, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x12, 0x8c, 0x01, 0x0a,
	0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x6f, 0x92, 0x41, 0x6c, 0x2a, 0x6a, 0xe4, 0xb8, 0x80, 0xe6, 0xac, 0xa1, 0xe6, 0x80, 0xa7,
	0xe5, 0xae, 0x9a, 0xe6, 0x97, 0xb6, 0xe5, 0x99, 0xa8, 0xe5, 0xbf, 0x85, 0xe4, 0xbc, 0xa0, 0x2c,
	0xe5, 0xae, 0x9a, 0xe6, 0x97, 0xb6, 0xe5, 0x99, 0xa8, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0xe6,
	0x88, 0xb3, 0xef, 0xbc, 0x88, 0xe5, 0x8d, 0x95, 0xe4, 0xbd, 0x8d, 0xe7, 0xa7, 0x92, 0xef, 0xbc,
	0x89, 0xef, 0xbc, 0x9b, 0xe6, 0xaf, 0x94, 0xe5, 0xa6, 0x82, 0xef, 0xbc, 0x9a, 0x31, 0x37, 0x31,
	0x38, 0x38, 0x35, 0x34, 0x36, 0x37, 0x31, 0x20, 0xe8, 0xa1, 0xa8, 0xe7, 0xa4, 0xba, 0x20, 0x32,
	0x30, 0x32, 0x34, 0x2d, 0x36, 0x2d, 0x32, 0x30, 0x20, 0x31, 0x31, 0x3a, 0x33, 0x37, 0x3a, 0x35,
	0x31, 0x52, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x92, 0x41, 0x08,
	0x2a, 0x06, 0xe9, 0x99, 0x84, 0xe4, 0xbb, 0xb6, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x12, 0x48, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x42, 0x1a, 0x92, 0x41, 0x17, 0x2a, 0x15, 0xe9, 0xa2, 0x9d,
	0xe5, 0xa4, 0x96, 0xe8, 0x87, 0xaa, 0xe5, 0xae, 0x9a, 0xe4, 0xb9, 0x89, 0xe5, 0x8f, 0x82, 0xe6,
	0x95, 0xb0, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x47, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x14, 0x92, 0x41, 0x11, 0x2a, 0x0f, 0xe5, 0xae, 0x9a, 0xe6,
	0x97, 0xb6, 0xe5, 0x99, 0xa8, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x31, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x10, 0x92, 0x41, 0x0d, 0x2a, 0x0b, 0xe5, 0xae, 0x9a, 0xe6, 0x97, 0xb6, 0xe5, 0x99, 0xa8,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x92, 0x41, 0x0d, 0x2a, 0x0b, 0xe5, 0xae, 0x9a, 0xe6,
	0x97, 0xb6, 0xe5, 0x99, 0xa8, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0xfc, 0x07, 0x0a, 0x05,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x10, 0x92, 0x41, 0x0d, 0x2a, 0x0b, 0xe5, 0xae, 0x9a, 0xe6, 0x97, 0xb6, 0xe5, 0x99,
	0xa8, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x2a, 0x08, 0xe5, 0xba,
	0x94, 0xe7, 0x94, 0xa8, 0x49, 0x44, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x11,
	0x2a, 0x0f, 0xe5, 0xae, 0x9a, 0xe6, 0x97, 0xb6, 0xe5, 0x99, 0xa8, 0xe5, 0x90, 0x8d, 0xe7, 0xa7,
	0xb0, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x69, 0x6d, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x14,
	0x92, 0x41, 0x11, 0x2a, 0x0f, 0xe5, 0xae, 0x9a, 0xe6, 0x97, 0xb6, 0xe5, 0x99, 0xa8, 0xe7, 0xb1,
	0xbb, 0xe5, 0x9e, 0x8b, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x6e, 0x0a, 0x0d, 0x63, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x42, 0x2d, 0x92,
	0x41, 0x2a, 0x2a, 0x28, 0xe5, 0x9b, 0x9e, 0xe8, 0xb0, 0x83, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b,
	0xef, 0xbc, 0x88, 0x6d, 0x71, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0xe5, 0x8f, 0xaa, 0xe6, 0x94,
	0xaf, 0xe6, 0x8c, 0x81, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0xef, 0xbc, 0x89, 0x52, 0x0c, 0x63, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x77, 0x0a, 0x10, 0x63, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x4c, 0x92, 0x41, 0x49, 0x2a, 0x47, 0x68, 0x74, 0x74, 0x70, 0xe5,
	0x9b, 0x9e, 0xe8, 0xb0, 0x83, 0xe5, 0x9c, 0xb0, 0xe5, 0x9d, 0x80, 0xef, 0xbc, 0x8c, 0xe6, 0xb3,
	0xa8, 0xe6, 0x84, 0x8f, 0xe5, 0x9b, 0x9e, 0xe8, 0xb0, 0x83, 0xe6, 0x96, 0xb9, 0xe5, 0xbc, 0x8f,
	0xe4, 0xb8, 0xba, 0x20, 0x47, 0x45, 0x54, 0x20, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x5f, 0x75, 0x72, 0x6c, 0x3f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x3d, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x52, 0x0f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x63, 0x72, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0x92, 0x41, 0x15, 0x2a, 0x13, 0x63, 0x72, 0x6f,
	0x6e, 0x6a, 0x6f, 0x62, 0xe7, 0xb1, 0xbb, 0xe5, 0x9e, 0x8b, 0xe5, 0xbf, 0x85, 0xe5, 0xa1, 0xab,
	0x52, 0x08, 0x63, 0x72, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x12, 0x73, 0x0a, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x42, 0x56, 0x92,
	0x41, 0x53, 0x2a, 0x51, 0xe5, 0xae, 0x9a, 0xe6, 0x97, 0xb6, 0xe5, 0x99, 0xa8, 0xe6, 0x97, 0xb6,
	0xe9, 0x97, 0xb4, 0xe6, 0x88, 0xb3, 0xef, 0xbc, 0x88, 0xe5, 0x8d, 0x95, 0xe4, 0xbd, 0x8d, 0xe7,
	0xa7, 0x92, 0xef, 0xbc, 0x89, 0xef, 0xbc, 0x9b, 0xe6, 0xaf, 0x94, 0xe5, 0xa6, 0x82, 0xef, 0xbc,
	0x9a, 0x31, 0x37, 0x31, 0x38, 0x38, 0x35, 0x34, 0x36, 0x37, 0x31, 0x20, 0xe8, 0xa1, 0xa8, 0xe7,
	0xa4, 0xba, 0x20, 0x32, 0x30, 0x32, 0x34, 0x2d, 0x36, 0x2d, 0x32, 0x30, 0x20, 0x31, 0x31, 0x3a,
	0x33, 0x37, 0x3a, 0x35, 0x31, 0x52, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x12,
	0x23, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0b, 0x92, 0x41, 0x08, 0x2a, 0x06, 0xe9, 0x99, 0x84, 0xe4, 0xbb, 0xb6, 0x52, 0x06, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x12, 0x40, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x2e, 0x92, 0x41, 0x2b, 0x2a, 0x29, 0xe5, 0x89, 0xa9, 0xe4, 0xbd, 0x99, 0xe6, 0x97,
	0xb6, 0xe9, 0x97, 0xb4, 0xef, 0xbc, 0x8c, 0xe5, 0xa6, 0x82, 0xe6, 0x9e, 0x9c, 0xe5, 0xb7, 0xb2,
	0xe7, 0xbb, 0x8f, 0xe8, 0xbf, 0x87, 0xe6, 0x9c, 0x9f, 0xe5, 0x88, 0x99, 0xe4, 0xb8, 0xba, 0x2d,
	0x31, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x2b, 0x0a, 0x04, 0x66, 0x61, 0x69, 0x6c, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x17, 0x92, 0x41, 0x14, 0x2a, 0x12, 0xe5, 0x9b, 0x9e, 0xe8, 0xb0,
	0x83, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0xe6, 0xac, 0xa1, 0xe6, 0x95, 0xb0, 0x52, 0x04, 0x66,
	0x61, 0x69, 0x6c, 0x12, 0x31, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x17, 0x92, 0x41, 0x14, 0x2a, 0x12, 0xe5, 0x9b, 0x9e, 0xe8, 0xb0,
	0x83, 0xe6, 0x88, 0x90, 0xe5, 0x8a, 0x9f, 0xe6, 0xac, 0xa1, 0xe6, 0x95, 0xb0, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x4f, 0x0a, 0x17, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x42, 0x17, 0x92, 0x41, 0x14, 0x2a, 0x12, 0xe5, 0x9b,
	0x9e, 0xe8, 0xb0, 0x83, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0xe5, 0x8e, 0x9f, 0xe5, 0x9b, 0xa0,
	0x52, 0x15, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x48, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x42, 0x1a, 0x92,
	0x41, 0x17, 0x2a, 0x15, 0xe9, 0xa2, 0x9d, 0xe5, 0xa4, 0x96, 0xe8, 0x87, 0xaa, 0xe5, 0xae, 0x9a,
	0xe4, 0xb9, 0x89, 0xe5, 0x8f, 0x82, 0xe6, 0x95, 0xb0, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x47, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x14, 0x92, 0x41,
	0x11, 0x2a, 0x0f, 0xe5, 0xae, 0x9a, 0xe6, 0x97, 0xb6, 0xe5, 0x99, 0xa8, 0xe7, 0x8a, 0xb6, 0xe6,
	0x80, 0x81, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x18, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x10, 0x92, 0x41, 0x0d, 0x2a, 0x0b, 0xe5, 0xae, 0x9a, 0xe6, 0x97, 0xb6,
	0xe5, 0x99, 0xa8, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x42, 0x14, 0x92, 0x41, 0x11, 0x2a, 0x0f, 0xe5, 0xae, 0x9a, 0xe6, 0x97,
	0xb6, 0xe5, 0x99, 0xa8, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x61, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x47, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x14, 0x92, 0x41, 0x11, 0x2a, 0x0f, 0xe5, 0xae,
	0x9a, 0xe6, 0x97, 0xb6, 0xe5, 0x99, 0xa8, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x36, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x92, 0x41, 0x0d, 0x2a, 0x0b, 0xe5, 0xae,
	0x9a, 0xe6, 0x97, 0xb6, 0xe5, 0x99, 0xa8, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x12, 0x0a,
	0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x36, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x10, 0x92, 0x41, 0x0d, 0x2a, 0x0b, 0xe5, 0xae, 0x9a, 0xe6, 0x97, 0xb6,
	0xe5, 0x99, 0xa8, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x94, 0x01,
	0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3a, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x26, 0x92, 0x41, 0x23, 0x2a, 0x1d, 0xe6, 0xaf, 0x8f, 0xe9, 0xa1, 0xb5, 0xe6, 0x95, 0xb0,
	0xe6, 0x8d, 0xae, 0xe5, 0xa4, 0xa7, 0xe5, 0xb0, 0x8f, 0xef, 0xbc, 0x8c, 0xe9, 0xbb, 0x98, 0xe8,
	0xae, 0xa4, 0x31, 0x30, 0x3a, 0x02, 0x31, 0x30, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x44,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2c,
	0x92, 0x41, 0x29, 0x2a, 0x27, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe9, 0xa1, 0xb5, 0xe5, 0x81,
	0x8f, 0xe7, 0xa7, 0xbb, 0xef, 0xbc, 0x8c, 0xe9, 0xbb, 0x98, 0xe8, 0xae, 0xa4, 0xe4, 0xbc, 0xa0,
	0xe7, 0xa9, 0xba, 0xe5, 0xad, 0x97, 0xe7, 0xac, 0xa6, 0xe4, 0xb8, 0xb2, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x69, 0x6d,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x42, 0x11, 0x92, 0x41, 0x0e,
	0x2a, 0x0c, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x32, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1a, 0x92, 0x41, 0x17, 0x2a, 0x15, 0xe4, 0xb8, 0x8b, 0xe4,
	0xb8, 0x80, 0xe9, 0xa1, 0xb5, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe5, 0x81, 0x8f, 0xe7, 0xa7,
	0xbb, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x2a, 0x23, 0x0a, 0x0c, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x54, 0x54,
	0x50, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4b, 0x41, 0x46, 0x4b, 0x41, 0x10, 0x01, 0x2a, 0x26,
	0x0a, 0x0b, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a,
	0x07, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x4e,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x2a, 0x21, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x49, 0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x51, 0x55, 0x45, 0x52, 0x59, 0x10, 0x01, 0x2a, 0x22, 0x0a, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x4e, 0x43, 0x45, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52, 0x4f, 0x4e, 0x4a, 0x4f, 0x42, 0x10, 0x01, 0x42, 0x11, 0x5a,
	0x0f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_timer_v1_timer_proto_rawDescOnce sync.Once
	file_timer_v1_timer_proto_rawDescData = file_timer_v1_timer_proto_rawDesc
)

func file_timer_v1_timer_proto_rawDescGZIP() []byte {
	file_timer_v1_timer_proto_rawDescOnce.Do(func() {
		file_timer_v1_timer_proto_rawDescData = protoimpl.X.CompressGZIP(file_timer_v1_timer_proto_rawDescData)
	})
	return file_timer_v1_timer_proto_rawDescData
}

var file_timer_v1_timer_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_timer_v1_timer_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_timer_v1_timer_proto_goTypes = []interface{}{
	(CallbackType)(0),                // 0: api.timer.v1.CallbackType
	(TimerStatus)(0),                 // 1: api.timer.v1.TimerStatus
	(ParamsIn)(0),                    // 2: api.timer.v1.ParamsIn
	(TimerType)(0),                   // 3: api.timer.v1.TimerType
	(*Params)(nil),                   // 4: api.timer.v1.Params
	(*AddTimerRequest)(nil),          // 5: api.timer.v1.AddTimerRequest
	(*AddTimerReply)(nil),            // 6: api.timer.v1.AddTimerReply
	(*GetTimerRequest)(nil),          // 7: api.timer.v1.GetTimerRequest
	(*Timer)(nil),                    // 8: api.timer.v1.Timer
	(*UpdateTimerStatusRequest)(nil), // 9: api.timer.v1.UpdateTimerStatusRequest
	(*UpdateTimerStatusReply)(nil),   // 10: api.timer.v1.UpdateTimerStatusReply
	(*DeleteTimerRequest)(nil),       // 11: api.timer.v1.DeleteTimerRequest
	(*DeleteTimerReply)(nil),         // 12: api.timer.v1.DeleteTimerReply
	(*ReplayTimerRequest)(nil),       // 13: api.timer.v1.ReplayTimerRequest
	(*ReplayTimerReply)(nil),         // 14: api.timer.v1.ReplayTimerReply
	(*ListTimerRequest)(nil),         // 15: api.timer.v1.ListTimerRequest
	(*ListTimerReply)(nil),           // 16: api.timer.v1.ListTimerReply
}
var file_timer_v1_timer_proto_depIdxs = []int32{
	2,  // 0: api.timer.v1.Params.in:type_name -> api.timer.v1.ParamsIn
	3,  // 1: api.timer.v1.AddTimerRequest.type:type_name -> api.timer.v1.TimerType
	0,  // 2: api.timer.v1.AddTimerRequest.callback_type:type_name -> api.timer.v1.CallbackType
	4,  // 3: api.timer.v1.AddTimerRequest.params:type_name -> api.timer.v1.Params
	1,  // 4: api.timer.v1.AddTimerRequest.status:type_name -> api.timer.v1.TimerStatus
	3,  // 5: api.timer.v1.Timer.type:type_name -> api.timer.v1.TimerType
	0,  // 6: api.timer.v1.Timer.callback_type:type_name -> api.timer.v1.CallbackType
	4,  // 7: api.timer.v1.Timer.params:type_name -> api.timer.v1.Params
	1,  // 8: api.timer.v1.Timer.status:type_name -> api.timer.v1.TimerStatus
	1,  // 9: api.timer.v1.UpdateTimerStatusRequest.status:type_name -> api.timer.v1.TimerStatus
	1,  // 10: api.timer.v1.UpdateTimerStatusReply.status:type_name -> api.timer.v1.TimerStatus
	8,  // 11: api.timer.v1.ListTimerReply.items:type_name -> api.timer.v1.Timer
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_timer_v1_timer_proto_init() }
func file_timer_v1_timer_proto_init() {
	if File_timer_v1_timer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_timer_v1_timer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Params); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timer_v1_timer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTimerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timer_v1_timer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTimerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timer_v1_timer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timer_v1_timer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timer_v1_timer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTimerStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timer_v1_timer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTimerStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timer_v1_timer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTimerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timer_v1_timer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTimerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timer_v1_timer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplayTimerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timer_v1_timer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplayTimerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timer_v1_timer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTimerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timer_v1_timer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTimerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_timer_v1_timer_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_timer_v1_timer_proto_goTypes,
		DependencyIndexes: file_timer_v1_timer_proto_depIdxs,
		EnumInfos:         file_timer_v1_timer_proto_enumTypes,
		MessageInfos:      file_timer_v1_timer_proto_msgTypes,
	}.Build()
	File_timer_v1_timer_proto = out.File
	file_timer_v1_timer_proto_rawDesc = nil
	file_timer_v1_timer_proto_goTypes = nil
	file_timer_v1_timer_proto_depIdxs = nil
}
